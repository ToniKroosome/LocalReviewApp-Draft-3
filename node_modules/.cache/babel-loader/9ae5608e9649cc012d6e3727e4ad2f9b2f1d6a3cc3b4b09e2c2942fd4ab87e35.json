{"ast":null,"code":"// Function to generate image using Imagen API\nconst generateImage = async prompt => {\n  try {\n    const payload = {\n      instances: [{\n        prompt: prompt\n      }],\n      parameters: {\n        \"sampleCount\": 1\n      }\n    };\n    const apiKey = \"\"; // Canvas will automatically provide the API key\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=${apiKey}`;\n    const response = await fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n    if (!response.ok) {\n      let errorDetails = `Status: ${response.status}`;\n      try {\n        const errorBody = await response.text();\n        errorDetails += `, Body: ${errorBody}`;\n      } catch (readError) {\n        errorDetails += `, Failed to read response body`;\n      }\n      throw new Error(`API call failed: ${errorDetails}`);\n    }\n    const result = await response.json();\n    if (result.predictions && result.predictions.length > 0 && result.predictions[0].bytesBase64Encoded) {\n      return `data:image/png;base64,${result.predictions[0].bytesBase64Encoded}`;\n    } else {\n      console.error(\"Image generation failed or returned no data:\", result);\n      return null;\n    }\n  } catch (error) {\n    console.error(\"Error generating image:\", error);\n    return null;\n  }\n};\nexport default generateImage;","map":{"version":3,"names":["generateImage","prompt","payload","instances","parameters","apiKey","apiUrl","response","fetch","method","headers","body","JSON","stringify","ok","errorDetails","status","errorBody","text","readError","Error","result","json","predictions","length","bytesBase64Encoded","console","error"],"sources":["/Users/thanapruetprayoonphrom/LocalReviewApp-Draft-3/LocalReviewApp-Draft-3/src/utils/imageGeneration.js"],"sourcesContent":["// Function to generate image using Imagen API\nconst generateImage = async (prompt) => {\n    try {\n        const payload = { instances: [{ prompt: prompt }], parameters: { \"sampleCount\": 1} };\n        const apiKey = \"\"; // Canvas will automatically provide the API key\n        const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=${apiKey}`;\n        \n        const response = await fetch(apiUrl, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(payload)\n        });\n\n        if (!response.ok) {\n            let errorDetails = `Status: ${response.status}`;\n            try {\n                const errorBody = await response.text();\n                errorDetails += `, Body: ${errorBody}`;\n            } catch (readError) {\n                errorDetails += `, Failed to read response body`;\n            }\n            throw new Error(`API call failed: ${errorDetails}`);\n        }\n\n        const result = await response.json();\n\n        if (result.predictions && result.predictions.length > 0 && result.predictions[0].bytesBase64Encoded) {\n            return `data:image/png;base64,${result.predictions[0].bytesBase64Encoded}`;\n        } else {\n            console.error(\"Image generation failed or returned no data:\", result);\n            return null;\n        }\n    } catch (error) {\n        console.error(\"Error generating image:\", error);\n        return null;\n    }\n};\n\n\n\n\n\nexport default generateImage;\n"],"mappings":"AAAA;AACA,MAAMA,aAAa,GAAG,MAAOC,MAAM,IAAK;EACpC,IAAI;IACA,MAAMC,OAAO,GAAG;MAAEC,SAAS,EAAE,CAAC;QAAEF,MAAM,EAAEA;MAAO,CAAC,CAAC;MAAEG,UAAU,EAAE;QAAE,aAAa,EAAE;MAAC;IAAE,CAAC;IACpF,MAAMC,MAAM,GAAG,EAAE,CAAC,CAAC;IACnB,MAAMC,MAAM,GAAG,+FAA+FD,MAAM,EAAE;IAEtH,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,MAAM,EAAE;MACjCG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,OAAO;IAChC,CAAC,CAAC;IAEF,IAAI,CAACK,QAAQ,CAACO,EAAE,EAAE;MACd,IAAIC,YAAY,GAAG,WAAWR,QAAQ,CAACS,MAAM,EAAE;MAC/C,IAAI;QACA,MAAMC,SAAS,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QACvCH,YAAY,IAAI,WAAWE,SAAS,EAAE;MAC1C,CAAC,CAAC,OAAOE,SAAS,EAAE;QAChBJ,YAAY,IAAI,gCAAgC;MACpD;MACA,MAAM,IAAIK,KAAK,CAAC,oBAAoBL,YAAY,EAAE,CAAC;IACvD;IAEA,MAAMM,MAAM,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAAC,CAAC;IAEpC,IAAID,MAAM,CAACE,WAAW,IAAIF,MAAM,CAACE,WAAW,CAACC,MAAM,GAAG,CAAC,IAAIH,MAAM,CAACE,WAAW,CAAC,CAAC,CAAC,CAACE,kBAAkB,EAAE;MACjG,OAAO,yBAAyBJ,MAAM,CAACE,WAAW,CAAC,CAAC,CAAC,CAACE,kBAAkB,EAAE;IAC9E,CAAC,MAAM;MACHC,OAAO,CAACC,KAAK,CAAC,8CAA8C,EAAEN,MAAM,CAAC;MACrE,OAAO,IAAI;IACf;EACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,IAAI;EACf;AACJ,CAAC;AAMD,eAAe3B,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}